<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2016 The Pure Nexus Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- Is Advanced Reboot enabled? -->
    <bool name="config_advanced_reboot">true</bool>

    <!-- The list of components which should be automatically disabled. -->
    <string-array name="config_disabledComponents" translatable="false">
    </string-array>
    
    <!-- Wether device has fingerprint support -->
    <bool name="config_hasFingerprint">true</bool>

    <!-- Wether device has dash charging support -->
    <bool name="config_hasDashCharger">false</bool>

    <!-- Whether notify fingerprint client of successful cancelled authentication -->
    <bool name="config_notifyClientOnFingerprintCancelSuccess">false</bool>

    <!-- Wether device wants remove home press vibration -->
    <bool name="config_removeHomePressVib">false</bool>

    <!-- Minimum screen brightness setting allowed by the power manager.
       The user is forbidden from setting the brightness below this level. -->
    <integer name="config_buttonBrightnessSettingMinimum">10</integer>

    <!-- Maximum button brightness allowed by the power manager.
       The user is forbidden from setting the brightness above this level. -->
    <integer name="config_buttonBrightnessSettingMaximum">255</integer>

    <!-- Default button brightness setting.
       Must be in the range specified by minimum and maximum. -->
    <integer name="config_buttonBrightnessSettingDefault">255</integer>

     <!-- Control the behavior when the user long presses the home button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_longPressOnHardwareHomeBehavior">0</integer>

    <!-- Control the behavior when the user double-taps the home button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_doubleTapOnHardwareHomeBehavior">0</integer>

    <!-- Control the behavior when the user long presses the menu button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_pressOnHardwareMenuBehavior">2</integer>

    <!-- Control the behavior when the user long presses the menu button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_longPressOnHardwareMenuBehavior">0</integer>

    <!-- Control the behavior when the user double-taps the menu button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_doubleTapOnHardwareMenuBehavior">0</integer>

    <!-- Control the behavior when the user long presses the back button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_pressOnHardwareBackBehavior">3</integer>

    <!-- Control the behavior when the user long presses the back button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_longPressOnHardwareBackBehavior">0</integer>

    <!-- Control the behavior when the user double-taps the back button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_doubleTapOnHardwareBackBehavior">0</integer>

    <!-- Control the behavior when the user presses the assist button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_pressOnHardwareAssistBehavior">6</integer>

    <!-- Control the behavior when the user long presses the assist button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_longPressOnHardwareAssistBehavior">0</integer>

    <!-- Control the behavior when the user double-taps the assist button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_doubleTapOnHardwareAssistBehavior">0</integer>

    <!-- Control the behavior when the user long presses the app switch button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_pressOnHardwareAppSwitchBehavior">4</integer>

    <!-- Control the behavior when the user long presses the app switch button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_longPressOnHardwareAppSwitchBehavior">0</integer>

    <!-- Control the behavior when the user double-taps the app switch button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_doubleTapOnHardwareAppSwitchBehavior">0</integer>

    <!-- Control the behavior when the user presses the camera button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_pressOnHardwareCameraBehavior">8</integer>

    <!-- Control the behavior when the user long presses the camera button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_longPressOnHardwareCameraBehavior">0</integer>

    <!-- Control the behavior when the user double-taps the camera button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Back
            4 - Launch assist intent
            5 - Voice Search
            6 - Launch Camera
            7 - Launch Last app
            8 - Single Hand Mode Right
            9 - Single Hand Mode Left
            10 - Split Screen
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_doubleTapOnHardwareCameraBehavior">0</integer>

    <!-- Default value for led color when battery is really fully charged -->
    <integer name="config_notificationsBatteryReallyFullARGB">0xFF0000FF</integer>

    <!-- True if the notification's dynamic app icon/title tint should be optimised for dark
    backgrounds (requires config_allowNotificationIconTextTinting to be true)-->
    <bool name="config_useDarkBgNotificationIconTextTinting">false</bool>

    <!-- True if the notifications should dynamically tint the app icon and app title -->
    <bool name="config_allowNotificationIconTextTinting">true</bool>

    <!-- Whether doze should invert colors for notifications. If the RRO theme causes
    the NORMAL notification background to be dark and the text to be light, this boolean
    needs to be set to false, to prevent the doze notifications from being light -->
    <bool name="config_invert_colors_on_doze">true</bool>

    <!-- Hardware 'face' keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareWakeKeys">65</integer>
</resources>
